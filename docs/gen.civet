'civet coffeeInterpolation'

from node:fs/promises import { open }
from node:path import { join }
from ../src/codepage.civet import { array as codepage }
from ../src/compile.civet import { translations }

mdPath := join import.meta.dirname, 'codepage.md'

mdFile := await open mdPath, 'w', 0o644
finally
    await mdFile.close()

await mdFile.write '''
    <!-- THIS FILE IS AUTOGENERATED. DO NOT EDIT. -->

    This is the codepage used by the SBCS encoding:

    | |
    ''', null, 'ascii'

for i of [0..<16]
    await mdFile.write " `0x_#{i.toString 16}` |", null, 'ascii'
await mdFile.write '\n' + '|:-:'.repeat(17) + '|', null, 'ascii'

for i of [0..<16]
    await mdFile.write "\n| `0x#{i.toString 16}_` |", null, 'ascii'
    for j of [0..<16]
        char := codepage[i * 16 + j]
        if char is '\ufffd'
            await mdFile.write ' |', null, 'ascii'
        else if char is '\n'
            await mdFile.write ' &lt;LF&gt; |', null, 'ascii'
        else if char is ' '
            await mdFile.write ' &lt;SP&gt; |', null, 'ascii'
        else
            await mdFile.write
                `<code>${char is in ['|', '\\', ':', '-'] ? '\\' : ''}${char}</code> |`
                null
                'utf-8'

await mdFile.write `

Blank cells are reserved for future use.

---

The following characters are automatically translated into these Civet snippets, with whitespace as needed:

`, null, 'ascii'

for [char, snippet] of translations
    await mdFile.write "- `#{char}` â†’ `#{snippet}`\n", null, 'utf-8'
